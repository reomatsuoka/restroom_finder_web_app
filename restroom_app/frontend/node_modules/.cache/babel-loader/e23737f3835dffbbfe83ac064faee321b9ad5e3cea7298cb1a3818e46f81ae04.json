{"ast":null,"code":"var _jsxFileName = \"/Users/reo37458/Desktop/\\u30A2\\u30D5\\u309A\\u30EA\\u4F5C\\u6210/restroom_finder_web_app/restroom_app/frontend/src/Login.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './Login.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    setIsLoggedIn(!!token);\n  }, []);\n  const handleLoginSuccess = async googleData => {\n    const result = await axios.post('http://localhost:8000/dj-rest-auth/google/', {\n      access_token: googleData.tokenObj.id_token // Google から受け取った ID トークン\n    });\n\n    if (result.status === 200) {\n      localStorage.setItem('token', result.data.key);\n      setIsLoggedIn(true);\n    } else {\n      console.error(\"Google login error\", result);\n    }\n  };\n  const handleLoginFailure = response => {\n    console.error(response);\n  };\n  const handleCustomLogin = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('http://localhost:8000/login/', {\n        email: email,\n        password: password\n      });\n      if (response.status === 200) {\n        localStorage.setItem('token', response.data.token); // レスポンスからトークンを取得\n        navigate('/map'); // /map にリダイレクト\n      } else {\n        console.error(\"Login error\", response);\n      }\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  if (isLoggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Successfully logged in!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.loginContainer,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.form,\n      children: /*#__PURE__*/_jsxDEV(GoogleLogin, {\n        clientId: process.env.REACT_APP_GOOGLE_CLIENT_ID || '',\n        buttonText: \"Login with Google\",\n        onSuccess: handleLoginSuccess,\n        onFailure: handleLoginFailure,\n        cookiePolicy: 'single_host_origin'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleCustomLogin,\n      className: styles.form,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputField,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.inputField,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: styles.button,\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n_s(Login, \"MyKSqejd+7js6WrzfL3YkA3TPz0=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useEffect","GoogleLogin","useNavigate","axios","styles","jsxDEV","_jsxDEV","Login","_s","navigate","isLoggedIn","setIsLoggedIn","email","setEmail","password","setPassword","token","localStorage","getItem","handleLoginSuccess","googleData","result","post","access_token","tokenObj","id_token","status","setItem","data","key","console","error","handleLoginFailure","response","handleCustomLogin","event","preventDefault","children","fileName","_jsxFileName","lineNumber","columnNumber","className","loginContainer","form","clientId","process","env","REACT_APP_GOOGLE_CLIENT_ID","buttonText","onSuccess","onFailure","cookiePolicy","onSubmit","inputField","type","value","onChange","e","target","button","_c","$RefreshReg$"],"sources":["/Users/reo37458/Desktop/アプリ作成/restroom_finder_web_app/restroom_app/frontend/src/Login.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { GoogleLogin } from 'react-google-login';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport styles from './Login.module.css';\n\nconst Login: React.FC = () => {\n    const navigate = useNavigate();\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    useEffect(() => {\n        const token = localStorage.getItem('token');\n        setIsLoggedIn(!!token);\n    }, []);\n\n    const handleLoginSuccess = async (googleData: any) => {\n        const result = await axios.post('http://localhost:8000/dj-rest-auth/google/', {\n            access_token: googleData.tokenObj.id_token // Google から受け取った ID トークン\n        });\n\n        if (result.status === 200) {\n            localStorage.setItem('token', result.data.key);\n            setIsLoggedIn(true);\n        } else {\n            console.error(\"Google login error\", result);\n        }\n    };\n\n    const handleLoginFailure = (response: any) => {\n        console.error(response);\n    };\n\n    const handleCustomLogin = async (event: React.FormEvent) => {\n        event.preventDefault();\n        try {\n            const response = await axios.post('http://localhost:8000/login/', {\n                email: email,\n                password: password\n            });\n            if (response.status === 200) {\n                localStorage.setItem('token', response.data.token); // レスポンスからトークンを取得\n                navigate('/map'); // /map にリダイレクト\n            } else {\n                console.error(\"Login error\", response);\n            }\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    if (isLoggedIn) {\n        return <div>Successfully logged in!</div>;\n    }\n\n    return (\n        <div className={styles.loginContainer}>\n          {/* Google OAuth ログインボタン */}\n          <div className={styles.form}>\n            <GoogleLogin\n              clientId={process.env.REACT_APP_GOOGLE_CLIENT_ID || ''}\n              buttonText=\"Login with Google\"\n              onSuccess={handleLoginSuccess}\n              onFailure={handleLoginFailure}\n              cookiePolicy={'single_host_origin'}\n            />\n          </div>\n    \n          {/* メールアドレスとパスワードによるログインフォーム */}\n          <form onSubmit={handleCustomLogin} className={styles.form}>\n            <div className={styles.inputField}>\n              <label>Email:</label>\n              <input type=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} />\n            </div>\n            <div className={styles.inputField}>\n              <label>Password:</label>\n              <input type=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\n            </div>\n            <button type=\"submit\" className={styles.button}>Login</button>\n          </form>\n        </div>\n    );\n}\n\nexport default Login;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}