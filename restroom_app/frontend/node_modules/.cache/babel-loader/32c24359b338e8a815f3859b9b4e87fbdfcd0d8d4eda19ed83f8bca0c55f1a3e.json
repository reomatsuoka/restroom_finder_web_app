{"ast":null,"code":"var _jsxFileName = \"/Users/reo37458/Desktop/\\u30A2\\u30D5\\u309A\\u30EA\\u4F5C\\u6210/restroom_finder_web_app/restroom_app/frontend/src/Map.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100vh'\n};\nconst center = {\n  lat: 35.681236,\n  lng: 139.767125\n};\nconst Map = () => {\n  _s();\n  const [locations, setLocations] = useState([{\n    lat: 35.681236,\n    lng: 139.767125\n  }]);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n  // APIから位置データを取得\n  const fetchData = async () => {\n    try {\n      const result = await axios.get('http://localhost:8000/api/locations/');\n      setLocations(result.data.map(location => ({\n        lat: location.lat,\n        lng: location.lng\n      })));\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    // 初期データを設定した後にAPIからデータを取得\n    fetchData();\n\n    // ログイン状態をチェック\n    const token = localStorage.getItem('token');\n    setIsLoggedIn(!!token);\n  }, []);\n  const handleLogout = () => {\n    // ログアウト処理\n    localStorage.removeItem('token');\n    setIsLoggedIn(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: '100px',\n        display: 'flex',\n        flexDirection: 'column'\n      },\n      children: isLoggedIn ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleLogout,\n        children: \"\\u30ED\\u30B0\\u30A2\\u30A6\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this) :\n      /*#__PURE__*/\n      // ログインしていない場合はログインとサインアップボタンを表示\n      _jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"\\u30ED\\u30B0\\u30A4\\u30F3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            children: \"\\u30B5\\u30A4\\u30F3\\u30A2\\u30C3\\u30D7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || '',\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: center,\n        zoom: 10,\n        children: locations.map((location, i) => /*#__PURE__*/_jsxDEV(Marker, {\n          position: location\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(Map, \"dx9xZay9/jY5SW1LqPCCvauB7UU=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","axios","Link","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","Map","_s","locations","setLocations","isLoggedIn","setIsLoggedIn","fetchData","result","get","data","map","location","error","console","token","localStorage","getItem","handleLogout","removeItem","children","style","display","flexDirection","onClick","fileName","_jsxFileName","lineNumber","columnNumber","to","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","mapContainerStyle","zoom","i","position","_c","$RefreshReg$"],"sources":["/Users/reo37458/Desktop/アプリ作成/restroom_finder_web_app/restroom_app/frontend/src/Map.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\n\nconst containerStyle = {\n    width: '100%',\n    height: '100vh'\n};\n\nconst center = {\n    lat: 35.681236,\n    lng: 139.767125\n};\n\ntype Position = {\n    lat: number,\n    lng: number\n}\n\nconst Map: React.FC = () => {\n    const [locations, setLocations] = useState<Position[]>([\n        { lat: 35.681236, lng: 139.767125 },\n    ]);\n\n    const [isLoggedIn, setIsLoggedIn] = useState<boolean>(false);\n\n    // APIから位置データを取得\n    const fetchData = async () => {\n        try {\n            const result = await axios.get('http://localhost:8000/api/locations/');\n            setLocations(result.data.map((location: any) => ({lat: location.lat, lng: location.lng})));\n        } catch (error) {\n            console.error(error);\n        }\n    };\n\n    useEffect(() => {\n        // 初期データを設定した後にAPIからデータを取得\n        fetchData();\n\n        // ログイン状態をチェック\n        const token = localStorage.getItem('token');\n        setIsLoggedIn(!!token);\n    }, []);\n\n    const handleLogout = () => {\n        // ログアウト処理\n        localStorage.removeItem('token');\n        setIsLoggedIn(false);\n    };\n\n    return (\n        <div>\n            {/* 左側の縦長のボタンエリア */}\n            <div style={{ width: '100px', display: 'flex', flexDirection: 'column' }}>\n                {/* ログインしている場合はログアウトボタンを表示 */}\n                {isLoggedIn ? (\n                    <button onClick={handleLogout}>ログアウト</button>\n                ) : (\n                    // ログインしていない場合はログインとサインアップボタンを表示\n                    <div>\n                        <Link to=\"/login\">\n                            <button>ログイン</button>\n                        </Link>\n                        <Link to=\"/signup\">\n                            <button>サインアップ</button>\n                        </Link>\n                    </div>\n                )}\n            </div>\n            {/* マップ表示 */}\n            <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY || ''}>\n                <GoogleMap\n                    mapContainerStyle={containerStyle}\n                    center={center}\n                    zoom={10}\n                >\n                    {/* DBカラ取得した位置データに基づいて複数のマーカーを描画 */}\n                    {locations.map((location, i) => (\n                        <Marker key={i} position={location} />\n                    ))}\n                </GoogleMap>\n            </LoadScript>\n        </div>\n    );\n}\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}