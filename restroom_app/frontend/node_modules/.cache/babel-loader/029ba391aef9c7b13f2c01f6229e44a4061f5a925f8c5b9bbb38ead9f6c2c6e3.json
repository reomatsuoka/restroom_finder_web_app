{"ast":null,"code":"var _jsxFileName = \"/Users/reo37458/Desktop/\\u30C8\\u30A4\\u30EC\\u691C\\u7D22\\u30A2\\u30D5\\u309A\\u30EA_\\u30D5\\u3099\\u30E9\\u30A6\\u30B5\\u3099\\u7248/restroom_app/frontend/src/Map.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: '100%',\n  height: '100vh'\n};\nconst center = {\n  lat: 35.681236,\n  lng: 139.767125\n};\nconst Map = () => {\n  _s();\n  const [currentPosition, setCurrentPosition] = useState(null);\n  const [locations, setLocations] = useState([]);\n\n  // APIから位置データを取得\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const result = await axios.get('http://localhost:8000/api/locations/');\n        setLocations(result.data.map(location => ({\n          lat: location.lat,\n          lng: location.lng\n        })));\n      } catch (error) {\n        console.error(error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleClick = async e => {\n    var _e$latLng$lat, _e$latLng, _e$latLng$lng, _e$latLng2;\n    let lat = (_e$latLng$lat = (_e$latLng = e.latLng) === null || _e$latLng === void 0 ? void 0 : _e$latLng.lat()) !== null && _e$latLng$lat !== void 0 ? _e$latLng$lat : 0;\n    let lng = (_e$latLng$lng = (_e$latLng2 = e.latLng) === null || _e$latLng2 === void 0 ? void 0 : _e$latLng2.lng()) !== null && _e$latLng$lng !== void 0 ? _e$latLng$lng : 0;\n    setCurrentPosition({\n      lat,\n      lng\n    });\n    try {\n      await axios.post('http://localhost:8000/api/locations/', {\n        lat,\n        lng\n      });\n      console.log('Location saved');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || '',\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 10,\n      onClick: handleClick,\n      children: [locations.map((location, i) => /*#__PURE__*/_jsxDEV(Marker, {\n        position: location\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)), currentPosition && /*#__PURE__*/_jsxDEV(Marker, {\n        position: currentPosition\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 37\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(Map, \"KvebccL4yOvWUKUuw3ua3cFhP+0=\");\n_c = Map;\nexport default Map;\nvar _c;\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","LoadScript","Marker","axios","jsxDEV","_jsxDEV","containerStyle","width","height","center","lat","lng","Map","_s","currentPosition","setCurrentPosition","locations","setLocations","fetchData","result","get","data","map","location","error","console","handleClick","e","_e$latLng$lat","_e$latLng","_e$latLng$lng","_e$latLng2","latLng","post","log","err","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","children","mapContainerStyle","zoom","onClick","i","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/reo37458/Desktop/トイレ検索アプリ_ブラウザ版/restroom_app/frontend/src/Map.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { GoogleMap, LoadScript, Marker } from '@react-google-maps/api';\nimport axios from 'axios';\n\nconst containerStyle = {\n    width: '100%',\n    height: '100vh'\n};\n\nconst center = {\n    lat: 35.681236,\n    lng: 139.767125\n};\n\ntype Position = {\n    lat: number,\n    lng: number\n}\n\nconst Map: React.FC = () => {\n    const [currentPosition, setCurrentPosition] = useState<Position | null>(null);\n    const [locations, setLocations] = useState<Position[]>([]);\n\n    // APIから位置データを取得\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const result = await axios.get('http://localhost:8000/api/locations/');\n                setLocations(result.data.map((location: any) => ({lat: location.lat, lng: location.lng})));\n            } catch (error) {\n                console.error(error);\n            }\n        };\n        fetchData();\n    }, []);\n\n    const handleClick = async (e: google.maps.MapMouseEvent) => {\n        let lat: number = e.latLng?.lat() ?? 0;\n        let lng: number = e.latLng?.lng() ?? 0;\n\n        setCurrentPosition({lat, lng});\n\n        try {\n            await axios.post('http://localhost:8000/api/locations/', {lat, lng});\n            console.log('Location saved')\n        } catch (err) {\n            console.error(err);\n        }\n        \n    };\n    \n    return (\n        <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY || ''}>\n            <GoogleMap\n                mapContainerStyle={containerStyle}\n                center={center}\n                zoom={10}\n                onClick={handleClick}\n            >\n                {/* DBカラ取得した位置データに基づいて複数のマーカーを描画 */}\n                {locations.map((location, i) => (\n                    <Marker key={i} position={location} />\n                ))}\n                {/* 現在クリックされている位置に１つのマーカーを描画 */}\n                {currentPosition && <Marker position={currentPosition} />}\n            </GoogleMap>\n        </LoadScript>\n    );\n}\n\nexport default Map;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}